// Code generated by go-bindata.
// sources:
// templates/go_full.tpl
// templates/go_get_with_data_url.tpl
// templates/go_post_form.tpl
// templates/go_post_single_file.tpl
// templates/go_post_text.tpl
// templates/go_post_with_data_url.tpl
// templates/go_simple_get.tpl
// templates/go_simple_method.tpl
// templates/go_simple_post.tpl
// templates/java_full.tpl
// templates/nodejs_external_file.tpl
// templates/nodejs_external_files.tpl
// templates/nodejs_full.tpl
// templates/nodejs_simple_get.tpl
// templates/objc_nsurlconnection_full.tpl
// templates/objc_nsurlsession_full.tpl
// templates/php_full.tpl
// templates/python_full.tpl
// templates/vim_script_full.tpl
// templates/xhr_external_file.tpl
// templates/xhr_external_files.tpl
// templates/xhr_simple.tpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGo_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x50\x41\x6b\xf3\x30\x0c\xbd\xfb\x57\xf8\x2b\xe5\xc3\x81\xe0\x1f\x30\xe8\xa1\x5b\xd9\xad\xa3\x14\xb6\xeb\x50\x63\xa5\x35\x75\xed\x4c\x71\x18\xa5\xe4\xbf\x4f\x8a\xdb\xec\x3e\x5d\x92\xa7\xf7\xf4\x9e\xe4\x0e\x9a\x33\x1c\x51\x5f\xc0\x47\xa5\xfc\xa5\x4b\x94\xb5\x51\xb7\x9b\x26\x88\xdc\x5f\x9e\xf1\x5a\xeb\xe5\xa7\x7e\x5a\x69\xbb\x4d\x6e\x08\xd8\xeb\x71\xd4\x5c\x0b\x16\x09\xcd\x70\xc1\x03\x18\xdd\x38\x56\x32\x69\xd7\xce\xf9\xec\x53\x84\xb0\xc1\x26\x00\x81\x00\x96\xa9\x76\x88\xcd\x14\x65\x2a\x7d\x53\x62\x22\xf2\x1d\x61\x07\x84\x2f\xc1\x63\xcc\x22\x13\xa2\x29\x88\x63\xff\x9f\x72\xee\x6c\x61\x45\x5e\xfe\x9e\x93\xbb\x3e\xb4\xd2\xdd\x40\x86\x07\x26\xfc\x1a\xb0\xcf\xb5\x46\x22\x71\x98\x0c\xde\xf0\x7b\x5f\xfa\x46\x36\xb7\x5b\xcc\xa7\xe4\x64\xf9\x7a\x32\x78\xa7\xc0\xa0\x9e\xcd\x3e\x80\x3c\x1c\x02\x6a\xb9\xea\x91\xc2\x2f\xe0\xdb\xeb\xdd\xe7\x37\xae\xef\xe6\xac\xb2\xb7\xdd\x24\x73\xdf\xa2\x0c\xfb\x76\x12\xfc\x5b\xe9\xe8\xc3\xfd\x76\xa9\x90\x8e\xf6\x95\xd3\x82\x61\xba\x48\x8b\xa9\xc3\x16\x69\xb2\xb6\x72\x2a\x5f\x9d\x7a\x34\x45\x71\xe0\xc6\x1c\xe8\xd3\x90\x7d\xb0\x7b\x04\xb7\x0e\xc1\xcc\x13\x7f\xcc\x15\x62\x47\x3e\x66\xd3\x67\xfe\x1c\x8d\x84\x55\x95\x1a\xd5\x4f\x00\x00\x00\xff\xff\xb6\x98\x26\x81\x2b\x02\x00\x00")

func templatesGo_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_fullTpl,
		"templates/go_full.tpl",
	)
}

func templatesGo_fullTpl() (*asset, error) {
	bytes, err := templatesGo_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_full.tpl", size: 555, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_get_with_data_urlTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8d\xcf\x6a\xc3\x30\x0c\xc6\xef\x7e\x0a\xad\xf4\xe0\x40\xf1\x03\x0c\x7a\xd8\x1f\xb6\xd3\x60\x0c\x76\x1e\x5e\xad\x64\xa6\xaa\x1d\x14\xe5\x50\x82\xdf\x7d\x52\x32\xfa\x00\xf3\xc5\x48\xdf\x4f\xbf\x6f\x8c\xa7\x73\x1c\x10\x2e\x31\x17\xe7\xf2\x65\xac\x2c\xe0\xdd\xb2\x00\xc7\xa2\xfb\xfd\x19\xaf\x07\xd8\x7f\xc1\xfd\x11\xc2\x5b\x4d\x33\xe1\x04\xad\x81\xbe\x9d\x42\x16\xeb\xb8\xd3\x03\x2c\xa9\xb5\xce\xb9\x7e\x2e\xa7\x55\xe7\x3b\x58\x9c\x81\xca\x85\xe7\x28\x51\xc1\x75\x66\x9c\xc6\x03\x20\xb3\x49\x7f\x44\xc6\xf0\x8a\xe2\x8d\xfa\x64\x02\x93\x18\x95\xfb\x15\xb9\x3b\x42\xc9\xf4\x67\xb2\x47\x75\x08\x2f\x6a\x23\xaf\xf1\x86\x6e\xda\x84\x3d\xf2\x2a\x0f\x8f\x35\x5d\xc3\x13\xd5\x09\xfd\x46\x7c\xeb\xe2\x56\x99\xeb\x2c\x99\xc2\x07\xc6\xf4\x40\xe4\x6f\x17\xff\xec\xb5\xe0\x9d\x73\x11\x3f\x89\x7e\x83\xb7\xb2\xae\x73\xcd\xfd\x06\x00\x00\xff\xff\x43\x0e\x1f\x07\x5d\x01\x00\x00")

func templatesGo_get_with_data_urlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_get_with_data_urlTpl,
		"templates/go_get_with_data_url.tpl",
	)
}

func templatesGo_get_with_data_urlTpl() (*asset, error) {
	bytes, err := templatesGo_get_with_data_urlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_get_with_data_url.tpl", size: 349, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_post_formTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8d\x4d\x6a\x03\x31\x0c\x85\xf7\x3e\x85\x1a\xb2\xb0\x21\xf8\x00\x85\x2c\xfa\x43\x76\x85\x50\xe8\xba\xb8\xb1\x66\x6a\xa2\xb1\x07\xd9\x53\x08\x83\xef\x5e\xd9\x53\x72\x80\x6a\x23\xa4\xf7\xbd\xf7\x66\x77\xb9\xba\x11\x61\x72\x21\x2a\x15\xa6\x39\x71\x01\xad\xd6\x15\xd8\x45\xf9\xef\xaf\x78\x3b\xc0\xfe\x13\x1e\x8f\x60\xdf\x92\x5f\x08\x33\xd4\x0a\x32\x3b\x81\x9a\x2c\xe7\x4e\x0c\x18\x7d\xad\x46\xa9\x61\x89\x97\x1e\xa7\x0d\xac\xaa\x81\xc2\xd9\x57\x57\x9c\x80\xfd\x66\xcc\xf3\x01\x90\xb9\x85\x7e\x97\x32\xdb\x73\xca\xe5\x94\x78\xd2\x0d\xfd\x60\x12\xf2\x00\x3f\x8e\x16\xcc\xa6\x5b\xc2\xd0\xf9\x87\x23\xc4\x40\x7f\xb1\x6d\x28\x8d\xf6\x24\xd1\xa4\x45\xde\xd0\xad\xc3\xe3\x80\xdc\x9b\xec\x73\xf2\x37\xfb\x42\x29\xa3\xde\x88\x2f\x79\xdc\xfb\x43\x5a\x4a\x20\xfb\x8e\xce\x3f\x11\xe9\xbb\xe3\x9f\xbd\x4d\x38\x73\x88\x45\xe7\x22\x6b\xd4\xad\xcc\x18\x55\xd5\x6f\x00\x00\x00\xff\xff\x7f\x73\xbc\xec\x6a\x01\x00\x00")

func templatesGo_post_formTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_post_formTpl,
		"templates/go_post_form.tpl",
	)
}

func templatesGo_post_formTpl() (*asset, error) {
	bytes, err := templatesGo_post_formTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_post_form.tpl", size: 362, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_post_single_fileTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xc1\x6e\xc3\x20\x0c\x86\xef\x3c\x85\xc7\x09\xa4\x88\xde\x27\xf5\xb0\x55\xea\x75\xd1\xb4\x3d\x00\x6b\x9c\x14\x8d\x62\x04\xee\xa1\x8a\xf2\xee\x05\x12\xe5\x01\xea\x43\x62\xf8\x7f\xff\x9f\x45\xb4\x97\x7f\x3b\x21\xdc\xac\x0b\x42\xb8\x5b\xa4\xc4\xa0\x04\x94\x92\x94\xe5\xda\x78\x9a\xb6\xce\xd1\xc1\xd1\x9d\x9d\xdf\xce\x01\xf9\x70\x65\x8e\x52\x68\x21\xc6\x7b\xb8\xb4\x20\xa5\x61\x6e\xfa\xe8\x3c\x76\x80\x29\xc1\xfb\x11\x28\x9b\xaf\x88\x41\xc9\x79\x06\x73\x2e\x4a\x6f\xf9\x0a\xcb\x22\x75\xf3\xba\xb1\x19\xdf\x8e\x10\x9c\xdf\xe6\x6b\x15\xb8\x39\x5b\xb6\x5e\x15\x79\xb5\x2e\xed\x9b\x30\xc7\x3d\xbc\x2e\x61\x7a\xca\xac\x6a\xfa\x6f\xf2\x25\xb8\x83\x86\x3a\x51\x60\x0c\xfc\xf3\x88\x58\x69\x5d\xdb\xea\x45\xe6\x80\x23\xa6\x46\x36\x9f\x34\x3c\xcc\xc9\x53\x46\xb5\x3a\xfe\xca\xc5\xbe\xcf\xfa\x4a\xe6\x1b\xed\xf0\xe1\xbd\xda\x27\x5e\xe4\x56\xa1\x4f\x2e\xb0\xca\x5c\x7e\x93\xaa\x30\xad\xc5\x22\x9e\x01\x00\x00\xff\xff\xe0\x5c\xeb\xbb\xc1\x01\x00\x00")

func templatesGo_post_single_fileTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_post_single_fileTpl,
		"templates/go_post_single_file.tpl",
	)
}

func templatesGo_post_single_fileTpl() (*asset, error) {
	bytes, err := templatesGo_post_single_fileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_post_single_file.tpl", size: 449, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_post_textTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\xc1\x4a\xc4\x30\x10\x86\xef\x79\x8a\x71\xd9\x43\x82\x25\x0f\xa0\xec\x41\x57\xc4\x8b\xb0\x88\x7a\x95\x74\x33\xad\x61\xb3\x49\x99\xa4\x48\x29\x7d\x77\x27\x6d\xed\x03\x98\x4b\x98\x99\x6f\xfe\xff\x9f\xce\x9c\x2f\xa6\x45\xb8\x1a\x17\x84\x70\xd7\x2e\x52\x06\x29\xc6\x11\xc8\x04\xee\xef\x2f\x38\x54\xb0\xff\x82\xbb\x03\xe8\xd7\x68\x7b\x8f\x09\xa6\x09\xf8\xed\x18\x2a\x63\x2e\x77\xbc\x80\xc1\x4e\x93\x12\xa2\xe9\xc3\x79\x96\x93\x0a\x46\x51\x40\xe6\xf4\x93\xc9\x86\xc1\xb9\x26\x4c\x5d\x05\x48\x54\x44\xbf\x73\xee\xf4\x29\xa6\x2c\x0b\xf6\x41\x9e\xa9\x6a\xd6\xd6\xc7\x18\x32\x86\xfc\x3e\x74\xc8\xcd\x71\x74\x0d\xe8\x17\x93\x1e\x63\x1f\xac\xa1\xe2\x7b\x0f\xf5\x5a\x1c\x76\x70\x0b\x3f\xe4\x32\x92\xfe\x03\xa4\xe2\x54\x3e\x21\xe7\x5b\xe3\x55\x5b\x96\x4f\x43\xce\xd4\xbe\x08\xab\x39\x14\x8b\x97\x44\x37\x07\x08\xce\xaf\xc1\xcb\xf3\xb1\xd5\xcf\xbc\xe0\x25\x8f\x17\x74\xb9\xc2\x62\x83\x34\xdf\xc2\x86\x76\xd0\x47\x1f\x13\xca\x85\xa8\xb9\xb1\x5d\xe8\x62\x9f\x9d\xd7\x6f\x68\xec\x83\xf7\x72\xdb\xf8\xa7\x6f\x19\x9c\xc8\x85\x2c\x53\xe6\xaf\x95\xc5\x4c\x29\x31\x89\xdf\x00\x00\x00\xff\xff\xc7\xb5\xc3\xed\xcc\x01\x00\x00")

func templatesGo_post_textTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_post_textTpl,
		"templates/go_post_text.tpl",
	)
}

func templatesGo_post_textTpl() (*asset, error) {
	bytes, err := templatesGo_post_textTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_post_text.tpl", size: 460, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_post_with_data_urlTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8d\x4d\x6a\x03\x31\x0c\x85\xf7\x3e\x85\x3a\x64\x61\xc3\xe0\x03\x14\xb2\xe8\x0f\xdd\x15\x42\xa1\xeb\xe2\xc6\x9a\xa9\x89\x62\x0f\xb6\x67\x11\x06\xdf\xbd\x92\xa7\xe4\x00\xd5\x46\xe8\xbd\x4f\xef\x2d\xee\x7c\x71\x33\xc2\xd5\x85\xa8\x54\xb8\x2e\x29\x57\xd0\x6a\xdb\x20\xbb\xc8\xfa\xe1\x82\xb7\x11\x0e\x5f\xf0\x78\x04\xfb\x9e\xfc\x4a\x58\xa0\x35\xe0\x19\x18\x12\x9b\xcf\x81\x1f\x30\xfa\xd6\x8c\x52\xd3\x1a\xcf\x3d\x4e\x1b\xd8\x94\x80\xcc\xd9\x57\x57\x1d\x83\xfd\xce\x58\x96\x11\x30\x67\x09\xfd\xa9\x75\xb1\xa7\x54\xaa\x16\xec\x33\x13\x53\x23\x0c\xc3\x08\x31\x90\xe9\x7c\x98\x3a\xfc\x70\x14\xe9\x2f\x53\x86\xd2\x6c\xdf\x38\x97\x34\xdb\x3b\xba\x17\x78\x9c\x30\xf7\x1a\xfb\x9c\xfc\xcd\xbe\x50\x2a\xa8\x77\xe2\x9b\x85\x7b\x79\x48\x6b\x0d\x64\x3f\xd0\xf9\x27\x22\x7d\xff\xf8\x67\xaf\x18\xa7\x1c\x62\xd5\xa5\xf2\x9a\xb5\x94\x19\xa3\x9a\xfa\x0d\x00\x00\xff\xff\x51\xc7\x32\x6b\x67\x01\x00\x00")

func templatesGo_post_with_data_urlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_post_with_data_urlTpl,
		"templates/go_post_with_data_url.tpl",
	)
}

func templatesGo_post_with_data_urlTpl() (*asset, error) {
	bytes, err := templatesGo_post_with_data_urlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_post_with_data_url.tpl", size: 359, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_simple_getTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8d\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\xad\xf4\xe0\x40\xf1\x03\x0c\x7a\xd8\x06\xdb\x69\x30\x06\x3b\x0f\xaf\x56\x32\x53\xd5\x0e\x8a\x72\x28\xc1\xef\x3e\x29\x1d\x79\x80\xea\x60\x23\xfd\xdf\xff\xff\x63\x3c\x9d\xe3\x80\x70\x89\xb9\x38\x97\x2f\x63\x65\x01\xef\x96\x05\x38\x16\xbd\xef\xcf\x78\x3d\xc0\xfe\x1b\x1e\x8f\x10\xde\x6b\x9a\x09\x27\x68\x0d\x74\x76\x0a\x99\xac\xeb\x4e\x0d\x58\x52\x6b\x9d\x73\xfd\x5c\x4e\x6b\x9c\xef\x60\x71\x06\x32\x4e\xe3\x01\x90\xd9\x42\x7e\x45\xc6\xf0\x86\xe2\xd5\x1d\xbe\x98\xc0\x4c\x46\xe5\x7e\x45\x1e\x8e\x50\x32\xfd\x3b\x6d\xa8\x0e\xe1\x35\x4a\x24\xaf\xf2\x0d\x6d\xeb\x9b\xb0\x47\x5e\xc3\xc3\x73\x4d\xd7\xf0\x42\x75\x42\x7f\x23\x7e\xf4\xb0\x55\xe6\x3a\x4b\xa6\xf0\x89\x31\x3d\x11\xf9\xcd\x71\x67\xaf\x09\x1f\x9c\x8b\xf8\x49\xf4\x1b\xbc\x95\x75\x9d\x6b\xee\x2f\x00\x00\xff\xff\x3c\xd7\xa3\x7a\x4d\x01\x00\x00")

func templatesGo_simple_getTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_simple_getTpl,
		"templates/go_simple_get.tpl",
	)
}

func templatesGo_simple_getTpl() (*asset, error) {
	bytes, err := templatesGo_simple_getTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_simple_get.tpl", size: 333, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_simple_methodTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8f\xcf\x6a\xc3\x30\x0c\xc6\xef\x7a\x0a\xcd\x87\x61\x97\xe0\xdc\x07\x3d\xec\x0f\xbb\x6d\x8c\xc2\x1e\x20\x5b\xd4\xd6\xa0\x45\x99\xa3\x32\x46\xc8\xbb\x4f\x8e\x4b\xce\xf3\xc5\xfc\xf4\x49\x9f\x3e\xb5\x3b\x48\x5f\xa3\x64\x45\x0f\x68\xcf\x0d\xa4\xed\x59\x75\x74\x15\x93\xb4\x49\x2e\x9a\xf8\xca\x2c\x27\x07\x01\x76\x2d\xc0\x27\x27\x1a\x14\xef\xf6\x78\x5b\x06\xe2\xe3\xca\xf3\x02\x99\xbe\x2f\x34\x69\x83\x94\x73\x91\x57\xf5\x95\x7e\x0e\xb5\xee\xdd\x3c\x63\x7c\x21\x3d\x4b\x8f\xcb\xe2\x1a\x2c\xfc\x9e\xd9\xa0\xc1\x21\x71\x30\x87\x69\xdc\xc6\xeb\x9e\xf8\x24\xfe\x6a\x1c\x20\x1d\x57\xf1\x66\x5f\xda\x71\x5e\xa3\x59\xb2\xf8\xdc\x69\xc7\xde\xa4\x00\x0b\xf4\x74\xa4\x8c\xc5\x2a\x3e\x48\xff\x6b\xf9\x64\x22\x1f\xe0\xc3\x60\x33\xaf\xc7\xc5\x03\x75\xfd\x3d\xb3\xdf\xba\xff\xb9\xa3\x14\xde\x72\x1a\xd4\x4f\x6a\xdf\xc9\x17\xf3\x10\xe0\x2f\x00\x00\xff\xff\x3b\x7e\x7c\x62\x57\x01\x00\x00")

func templatesGo_simple_methodTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_simple_methodTpl,
		"templates/go_simple_method.tpl",
	)
}

func templatesGo_simple_methodTpl() (*asset, error) {
	bytes, err := templatesGo_simple_methodTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_simple_method.tpl", size: 343, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_simple_postTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8d\xc1\x6a\xc3\x30\x10\x44\xef\xfa\x8a\xad\xc9\x41\x02\xa3\x0f\x28\xe4\xd0\x16\x7a\x2b\x84\x42\xcf\x45\x8d\xd6\xae\xc8\x46\x32\xd2\xfa\x10\x8c\xfe\xbd\x2b\xa5\xf8\x03\xb2\x07\x1b\xcd\xbc\x99\x59\xdc\xf9\xe2\x66\x84\xab\x0b\x51\xa9\x70\x5d\x52\x66\xd0\x6a\xdb\x20\xbb\x28\xfa\xe1\x82\xb7\x11\x0e\xdf\xf0\x7c\x04\xfb\x91\xfc\x4a\x58\xa0\x56\x90\x1b\x04\x6a\xb6\x3c\x07\x09\x60\xf4\xb5\x1a\xa5\xa6\x35\x9e\x7b\x9d\x36\xb0\xa9\x06\x66\x2c\xcb\x08\x98\x73\x2b\xf9\x65\x5e\xec\x29\x15\xd6\x12\xb7\x5f\x99\x24\x3e\xc2\x30\x8c\x10\x03\x99\xce\x87\xa9\xc3\x4f\xc7\x26\xfd\x77\xb4\xa3\x34\xdb\x77\xc7\x8e\xb4\xd8\x77\xb4\xf6\xaf\xc7\x09\x73\x9f\xb1\xaf\xc9\xdf\xec\x1b\xa5\x82\xfa\x4e\xfc\x88\xb0\x8f\x87\xb4\x72\x20\xfb\x89\xce\xbf\x10\xe9\x3d\xf1\xe0\x6e\x33\x4e\x39\x44\xd6\x85\xe5\x37\xeb\x36\x66\x8c\xaa\xea\x2f\x00\x00\xff\xff\x25\x9c\x32\xd8\x57\x01\x00\x00")

func templatesGo_simple_postTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_simple_postTpl,
		"templates/go_simple_post.tpl",
	)
}

func templatesGo_simple_postTpl() (*asset, error) {
	bytes, err := templatesGo_simple_postTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_simple_post.tpl", size: 343, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJava_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x52\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\xb8\xa2\x05\x64\xa0\xf0\x07\xb4\xe8\x61\xcd\x76\x08\xd0\x60\x43\xb2\x9e\xb6\x61\x50\x24\xc6\x15\x2a\x53\x86\x24\xaf\xcd\x0c\xfd\xfb\x28\x3b\x41\x12\xcf\xa7\xf1\x10\x40\x8f\x8f\xef\xbd\x90\xee\x7b\xf0\x92\x6a\x84\xeb\x57\xdc\xdf\xc2\xf5\x2f\xb8\x7b\x80\x6a\xe5\x74\x67\x31\x40\x4a\xa6\x69\x9d\x8f\xc0\xb4\x4c\x60\xe0\xbe\xe8\x7b\x24\x9d\x52\x51\xb4\xdd\xd6\x1a\x05\xca\xca\x10\x60\x25\x0d\x41\x9f\x89\xd5\x47\xad\x4d\x34\x8e\xa4\xfd\x84\xdc\xf4\x32\x3f\x78\xb4\x00\xae\xc3\x50\x88\x8c\x2a\xf8\xed\x8c\x86\x86\x47\xc5\x26\x7a\x43\xf5\xf7\x9f\x20\x7d\x1d\x4a\xe8\x07\x72\xae\xe8\xf7\x67\xaf\x5c\xd9\x63\xe1\x9a\xc6\xd1\x92\xd8\x48\x5a\xf3\x07\x59\x3e\xc3\x5f\x3d\xb6\xd2\xe3\xa3\xd3\x39\xeb\xf3\xfa\x09\x3a\x6f\xe1\x01\x08\xdf\x80\x5f\x22\x73\x9e\x19\x49\xa9\xbc\x2f\x66\x44\x89\x50\xe5\xb4\x8b\xe1\x3f\xa5\x04\x8a\x21\x9e\x17\xf3\xed\x92\xd5\x2b\xd7\x22\x9d\x5a\x62\x8c\xe1\xde\xf7\xa3\xc9\x59\xaa\x13\xe9\xb8\x8c\x63\x6d\xf6\x21\x62\x53\xb9\x2e\x56\x2d\xaf\x21\xee\xc4\xd5\x1a\x43\xeb\x28\xe0\x1d\xdc\x68\xb8\x09\x3f\xe8\xea\x76\x08\x53\xd5\x18\x8f\xbd\x85\xd3\x28\xca\x7f\xf1\x15\x86\x20\x6b\x6e\xb1\xff\xb9\xcd\x63\xb7\xdb\xa1\x47\xbd\x46\xa9\xd1\xc3\xd6\x1f\x36\x73\x89\x8b\x0c\x2d\xa9\xed\x22\xdf\x04\x65\x73\x40\x8f\x26\x67\x1d\x36\x98\x38\x8c\x57\x04\x93\x39\x93\x05\xbf\xbd\x18\x8b\x20\xc4\xd0\x63\xe3\xad\xaf\x58\x43\x3f\x19\xca\x41\xe1\x03\x47\xe9\xac\x2d\x27\xb7\x9e\xdb\x8e\xa5\x51\x64\xe2\x7d\xb9\x52\x96\x57\xd6\x05\xd6\x3e\xb1\xf8\x9c\x32\xaa\x17\x10\x2b\x69\x77\xce\x37\xa8\xf9\x9b\xf8\xfc\xae\xb0\x1d\x8e\x82\x53\x73\x1c\xfd\x36\x51\xaa\xd7\x6f\x5e\xaa\x79\xb1\xe5\x97\xff\x96\x28\xc6\xdf\x54\xfc\x0d\x00\x00\xff\xff\xd9\x32\xfe\x9c\x87\x03\x00\x00")

func templatesJava_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesJava_fullTpl,
		"templates/java_full.tpl",
	)
}

func templatesJava_fullTpl() (*asset, error) {
	bytes, err := templatesJava_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/java_full.tpl", size: 903, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNodejs_external_fileTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x8f\xda\x30\x10\xbd\xf3\x2b\x46\xd1\x4a\x18\x15\x59\x7b\xac\x40\x7b\xe8\x42\x3f\x0e\xa5\xdb\x03\x97\x9e\x56\x56\x3c\x01\x6b\x83\x9d\xda\x4e\x17\x14\xf9\xbf\x77\xc6\x49\x49\x16\xb5\x8d\x04\xf2\xcc\x7b\xf6\xf3\x7b\xb6\x7f\x29\x0f\x55\x80\x07\xf0\xf8\xb3\x35\x1e\x45\x51\x85\x62\xb1\x9e\x75\x1d\x78\x65\x0f\x08\x77\x2f\x78\x59\xc2\xdd\x33\xac\x1e\x40\xee\x9c\x6e\x6b\x0c\x90\x12\xcf\x23\x0e\xa3\x54\x4d\xe7\x8f\xdd\x7e\x1d\xb4\x3a\x25\x6a\xca\x0f\x5a\x9b\x68\x9c\x55\xf5\x16\xcb\x5a\x79\xc5\x05\xd1\x66\x55\x90\x1e\x95\xfe\x64\xea\x7e\xba\x30\x56\xe3\x19\xe4\xc7\x73\x44\x4f\x74\x06\x02\xdc\x2f\x24\x0f\xbe\xa9\x13\xf2\xda\x5d\x67\xaa\x7f\x33\xf7\x78\x8e\xfb\x4b\xc3\xcc\x25\xd0\x16\x4a\xa7\x8d\x3d\xac\xa0\x68\x63\xf5\xbe\x48\xc3\xae\x96\x50\xb5\xb6\xcc\xdb\x10\xe8\x3d\x95\x34\x7f\xe3\x6c\x44\x1b\x17\xd0\xcd\x80\x3e\x56\x21\xec\x4f\xc9\x5f\xe9\x6c\x70\x35\x4a\x6a\x3b\x9f\xc1\xf5\x15\xf3\x18\x5b\x6f\xfb\x3a\xe5\x7f\xb6\xfe\xdd\x63\xa3\x3c\x3e\x3a\x7d\x19\xb2\xa3\xb8\x28\x34\xc6\x36\xb5\x21\xb9\x3e\x59\x02\x25\x07\x89\x21\x8a\x51\xef\xe8\x42\xa4\xad\x33\xf9\x0b\x0d\xd9\xfd\xf2\x0a\x36\x2a\x1e\x57\xbd\x08\x8d\xd8\x6f\x4e\xc6\x22\x35\x9c\x8f\x70\x9f\xd2\xc8\xa5\xc6\xc0\x65\x28\x73\x73\x10\x57\xc6\x09\xe3\xd1\xe9\x41\x6c\x97\x8b\x2c\x37\x31\xf1\xd4\x70\x60\x7c\x07\x7a\x93\x63\x88\xc2\x63\xf8\x5b\x4e\xb5\x3b\x88\xe2\xb3\x8b\x64\x3a\x34\xd4\x43\x5a\x1f\xde\x71\x25\x43\x54\xb1\x0d\x1b\xa7\x91\x1a\xc5\x4d\x7b\x87\x21\xa8\x03\xbe\x49\x37\x48\xd2\x99\x6b\x15\xd5\x7c\x7a\x7a\xe5\xb1\xb5\x2f\x53\xed\x5b\xfd\xf9\xe3\xd3\xf6\xc7\x0a\xe6\x24\xd0\x73\xc7\x45\xd3\x62\xcd\xf6\xf6\xa8\xfc\xd6\xbd\xda\xab\xb1\x81\x32\xbe\x84\x67\x7a\x07\xb5\xa1\x64\xf9\x29\xf0\x59\x7e\xa5\x22\xa4\x44\x27\x26\x5f\xbd\x89\x28\xf8\xee\x67\x46\x1a\x67\xe7\x80\x99\x42\x03\x31\x74\xb9\x64\x1f\xf9\x06\x4d\x8c\x08\xfc\x6f\x7e\x99\xde\x87\x87\xf2\xf4\x26\x1d\xd6\xe3\xdf\xef\x00\x00\x00\xff\xff\xea\xb9\x28\x58\xd0\x03\x00\x00")

func templatesNodejs_external_fileTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNodejs_external_fileTpl,
		"templates/nodejs_external_file.tpl",
	)
}

func templatesNodejs_external_fileTpl() (*asset, error) {
	bytes, err := templatesNodejs_external_fileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/nodejs_external_file.tpl", size: 976, mode: os.FileMode(420), modTime: time.Unix(1446807860, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNodejs_external_filesTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4f\x6f\xdb\x3e\x0c\xbd\xe7\x53\x10\x46\x81\x38\xf8\x19\xc2\xef\x38\x24\xe8\x61\x4d\xf6\xe7\xb0\xac\x3d\xe4\x32\x0c\x43\x21\xd8\x74\xa2\xd5\x91\x3c\x49\x5e\x16\x04\xfa\xee\x23\x65\x35\x56\x7a\x98\x80\x36\x22\xf9\x24\xf2\xbd\x67\xfd\x96\x16\x5a\x07\xf7\x60\xf1\xd7\xa0\x2c\x96\x45\xeb\x8a\xc5\x6a\x76\xb9\x80\x95\x7a\x8f\x70\xf7\x82\xe7\x0a\xee\x9e\x61\x79\x0f\x62\x6b\x9a\xa1\x43\x07\x21\xf0\x39\xc2\x70\x95\xa2\xfc\xfc\x94\x1d\xef\x41\xdd\x84\x40\x49\xf1\xbe\x69\x94\x57\x46\xcb\x6e\x83\x75\x27\xad\xe4\x80\x60\xb3\x27\x6b\x8e\xca\xa1\x90\x5d\x57\x7e\xcf\x3a\x2b\xea\x8b\x7f\x3c\x5a\x3a\xf2\x51\x75\x18\x47\xf8\x90\x25\x78\x10\xa0\xa5\xf1\x04\xe9\x92\xb2\x1d\x74\x1d\x2f\x2e\xdd\x50\xd7\xe8\x5c\x45\xa3\xfd\xc4\xda\x2f\xe0\x32\x83\xb4\x5a\x27\x2c\xca\x86\xef\xe0\x81\x6f\xba\x08\xfe\xf7\x55\x1e\x91\x08\x5c\x2e\xaa\xbd\x9d\x41\xec\x28\xda\x9d\x7b\xa4\xd6\x15\x10\xb9\xda\x34\x4a\xef\x97\x50\x0c\xbe\x7d\x57\x84\xc4\xb7\x82\x69\x0e\xb4\xb6\x82\x46\x7a\x99\x4f\xc0\x8b\xee\xe6\x22\xa5\xd3\x88\x31\x5a\x41\x00\xec\x1c\x52\x36\x31\x28\xe3\x61\xca\x5f\x4f\x07\x52\x76\xfc\xad\x5e\x15\xfe\xb1\x10\xfe\x80\x3a\xe3\xdf\xd2\xb8\x6b\xa3\x3d\x6a\xef\x5e\x5b\xb3\x0f\x4f\x16\x7b\x69\xf1\xc1\x34\xe7\x64\x24\x79\x47\x0e\x72\x6d\xdd\x29\x82\x8f\x36\x53\x51\xb0\xab\xe8\x7c\x39\x0d\x7e\x30\xce\x13\x5b\x06\x7f\xa6\x2d\xdb\x5c\x5d\x8b\xbd\xf4\x87\xe5\xd8\x84\x76\x2c\x51\x54\x50\x23\x25\x8c\xf5\xf0\x7f\x98\x38\xf4\x94\x48\x58\x2e\x45\x6c\x64\x72\x45\x1c\xd1\x1f\x4c\x93\x9a\x6d\x63\x10\xdb\x65\x24\x1e\x7b\xe6\xca\xdf\xc1\xa8\xc7\xa4\x7b\x69\xd1\xe5\x82\xd7\x04\x33\xe4\x5f\x67\xf6\x65\xf1\xc9\x78\x22\xed\x7a\xca\x21\xdd\x0f\xff\x71\x24\x9c\x97\x7e\x70\x6b\xd3\x20\x25\x8a\x37\xe9\x2d\x19\x21\xf7\x98\x84\xe7\xc5\x35\xea\x33\x67\x77\xe6\xb9\xe1\xf5\x61\xd0\x2f\x6f\xcd\xce\xfb\xcf\x1f\x1e\x37\xdf\x96\x30\xa7\x06\x23\x76\x95\x3b\xcb\xf4\x76\x28\xed\xc6\x9c\xf4\x95\x58\x82\x4c\x8f\xe3\x99\x1e\x47\xa7\xf4\xf8\x28\xd8\xcb\x2f\x14\xb8\x10\xc8\x31\x71\xb2\xca\x63\xc9\x0f\x31\x22\xc2\x74\x3a\x0a\xcc\x10\xda\x94\x29\xcb\x21\xf3\xa0\x8f\xcf\xd8\x8c\x48\x89\xff\xd4\x2f\xc2\x47\xf1\x50\x1c\x6f\xd4\xe1\x7e\xf4\xf7\x37\x00\x00\xff\xff\xd2\xc2\xdf\xaa\x5c\x04\x00\x00")

func templatesNodejs_external_filesTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNodejs_external_filesTpl,
		"templates/nodejs_external_files.tpl",
	)
}

func templatesNodejs_external_filesTpl() (*asset, error) {
	bytes, err := templatesNodejs_external_filesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/nodejs_external_files.tpl", size: 1116, mode: os.FileMode(420), modTime: time.Unix(1446807870, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNodejs_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\x41\x6b\xf2\x40\x10\xbd\xe7\x57\x0c\x41\xc8\xca\x17\x96\xef\x1c\xf1\x50\x15\xda\x43\x45\x0f\xbd\xf4\x24\x4b\x76\x34\xc1\x98\x4d\x77\x37\x15\x09\xfb\xdf\x3b\xb3\xd1\x2a\x42\x73\xda\x79\xf3\x78\x6f\x66\x5e\x86\x01\xac\x6a\x0f\x08\x93\x23\x5e\x72\x98\xec\xa0\x98\x83\x5c\x1b\xdd\x37\xe8\x20\x84\x6f\x65\x81\x38\xdc\xa5\x0a\xe6\x60\xf1\xab\xaf\x2d\x8a\xf4\x8e\xa6\xd3\x59\x32\x0c\xd8\xea\x10\x08\x94\x2f\x5a\xd7\xbe\x36\xad\x6a\x56\x58\x36\xca\x2a\x2e\x88\x96\x70\x73\x6b\xb1\x53\x16\x17\x46\x5f\xae\xea\x24\x48\xb2\xdc\x5b\x36\x35\xb6\x7e\xf4\xa6\xa6\x64\x2b\x74\x5e\x0c\x09\xd0\x57\x19\xe7\x0b\x60\x5b\xf9\x46\x4f\xf6\xcd\x63\xa3\x53\xbe\x2a\xa2\xc0\x96\x5e\x84\xe7\xc3\x50\xef\xa1\x45\x02\x8c\xf5\xf0\x9f\xac\x23\x8f\x8a\x2b\x8f\xe1\xc8\x8b\x43\xc7\xee\x09\x7d\x65\xf4\xd5\x60\x1d\x8b\x68\xf1\x30\xf4\xa6\xe3\x4d\xf8\x2a\x49\xc8\x61\xdf\xb7\x25\xd7\xc2\xa2\x9b\xc2\x38\x63\x49\x6d\xd3\xa0\x6c\xcc\x41\xa4\xaf\xc6\xd3\x72\xae\x23\x0c\x49\x17\xfe\x71\x25\x9d\x57\xbe\x77\x4b\xa3\x91\x80\xf4\x09\x5e\xa3\x73\xea\x80\x74\x4f\x56\x63\x9c\xf4\x33\xad\xbc\xca\xee\x86\x20\xca\xaa\x6f\x8f\x37\xcf\x67\xdf\x6c\xb1\x59\x7d\x16\x90\x91\xf0\xc8\x1b\xc5\xc2\x74\xc6\xab\x7c\xa0\xb2\x2b\x73\x8e\x79\x84\x98\xdb\x2d\xff\x1d\xa5\xdf\xd4\x74\x35\xfe\x01\x38\x9f\x77\x2a\x5c\x08\x94\x82\x3c\xdb\xda\xa3\xe0\xc4\x23\x23\x84\x7b\xe2\xdc\xa6\x87\x20\x84\x9f\x3c\x2f\x5a\x6b\xec\xc3\xc0\x02\xff\xbc\x4f\xa4\x8e\xc7\x41\x79\xfa\xdd\x9e\xf4\x7f\x02\x00\x00\xff\xff\x29\x91\x9d\x9c\x99\x02\x00\x00")

func templatesNodejs_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNodejs_fullTpl,
		"templates/nodejs_full.tpl",
	)
}

func templatesNodejs_fullTpl() (*asset, error) {
	bytes, err := templatesNodejs_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/nodejs_full.tpl", size: 665, mode: os.FileMode(420), modTime: time.Unix(1446807850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNodejs_simple_getTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\xc1\x4a\x03\x31\x10\x86\xef\xfb\x14\x43\x28\x6c\x16\x4b\x1e\x60\x4b\x2f\xb6\xe0\xa9\x78\xd1\x83\x27\x09\xbb\xe3\xba\x34\x66\x74\x92\x28\x12\xf2\xee\x4e\xba\x68\xa5\xd0\x5c\xc2\x7c\x33\x7c\xff\x4c\xce\xc0\xd6\x4f\x08\xab\x23\x7e\xaf\x61\xf5\x0c\xfd\x16\xcc\x81\xc6\xe4\x30\x40\x29\x9f\x96\x41\x66\x6a\x57\x2a\xd8\x02\xe3\x47\x9a\x19\xb5\x3a\x53\xd5\x6d\x9a\x9c\xd1\x8f\xa5\xc8\x0f\x66\xe7\x66\xf4\x71\x71\x48\xdb\x4c\x18\x75\xe5\x8f\xec\xa4\x5c\xc3\x4b\xf2\x43\x9c\xc9\x6b\xc6\xd0\x41\x6e\x40\xde\x40\x3e\x90\x43\xe3\x68\xd2\xea\x8e\xa2\xe4\x84\x77\x61\xd8\x83\x82\x9b\x5a\x99\x10\x6d\x4c\x61\x47\x23\x0a\x50\x17\xf8\x80\x21\xd8\x09\x65\x93\x6a\xab\x5c\xfc\xed\x68\xa3\x6d\xcf\x81\xa0\x87\xd7\xe4\x8f\xbf\x99\x97\xb9\xed\xed\xfd\xfe\xa9\x87\x56\xc4\xcb\xdc\x22\x2b\xdd\xa6\x6e\xff\x80\x96\xf7\xf4\xe5\xe5\x84\xa6\x74\x27\x3d\x32\x13\xff\xf3\x6b\xbc\x7a\xce\x69\x74\xb9\x05\xcd\xdb\xdf\xb2\xe2\x6e\x7e\x02\x00\x00\xff\xff\xb7\x8f\x23\x13\x83\x01\x00\x00")

func templatesNodejs_simple_getTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNodejs_simple_getTpl,
		"templates/nodejs_simple_get.tpl",
	)
}

func templatesNodejs_simple_getTpl() (*asset, error) {
	bytes, err := templatesNodejs_simple_getTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/nodejs_simple_get.tpl", size: 387, mode: os.FileMode(420), modTime: time.Unix(1446807731, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesObjc_nsurlconnection_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x61\x4f\xe3\x38\x10\xfd\x9e\x5f\x31\xc7\x01\x4a\x2b\x8e\x1f\x90\x52\xd4\x83\x5e\xc5\x89\xd2\xa2\x16\xb4\x5a\x45\xd1\xca\xc4\xd3\xc6\xbb\xae\x9d\x75\x1c\x50\xb7\xea\x7f\xdf\x71\x1a\x87\xd0\x8d\xf6\xcb\x22\xa1\xda\x9e\xf1\x7b\xcf\x33\x6f\xb2\xdb\x81\x61\x6a\x8d\x70\xfa\x0d\xb7\x17\x70\xfa\x05\xa2\x21\x5c\x3e\x68\x5e\x4a\x2c\x60\xbf\xff\x5b\x6c\x72\x6d\x2c\x5c\x51\xa2\x4b\xa1\xa3\xeb\x60\xb7\x43\xc5\xf7\xfb\x20\xb8\x99\xcf\xa7\x50\x64\xba\x94\xfc\x1e\x31\x5f\x94\x4a\x09\xb5\x86\x21\x7c\xfe\x6f\x39\x08\x82\x91\x50\x16\xcd\x8a\xa5\x08\x77\x4f\x4f\x8f\x63\xfd\xa6\xa4\x66\x7c\x8c\x12\xd7\xcc\x22\x44\x30\x5b\xce\x5f\xbe\x62\x6a\xaf\x66\xcb\xe7\xc5\xf4\x56\x2b\x45\x1b\xa1\x95\x4f\xb9\x86\x5d\x00\xf4\x37\x5b\x3e\x94\x96\xbd\x48\x1c\x33\xcb\xa0\x9f\x6a\x02\x56\xb6\x18\x04\x24\x62\x44\x62\x1c\xd7\x26\x97\xb8\xa1\x53\xe6\x00\x3a\x09\x83\xe0\x1f\x08\x5f\xb5\xe0\xbd\xb4\x61\x8a\xc2\x23\x6a\xe8\xb7\xa2\xc0\x05\x5f\x60\x8a\xe2\x15\x17\x58\xe4\x5a\x15\x58\x5f\xf0\x5b\x4a\x37\xf5\x32\xf0\x5a\x1d\xf7\x87\x94\xcc\xda\xbc\xd9\x0d\x21\xec\x48\x69\x50\x06\x35\xc8\x54\xaf\xc3\xd1\xc9\x92\x9e\x53\x16\x11\x9c\x49\x7e\x72\x01\x6d\x9c\xcb\xa2\x0a\xdd\x6a\x8e\x3d\x7f\x67\x2c\x2a\xd5\xcc\x6c\x89\x13\x19\x47\x53\x10\xdd\x87\x5b\x4c\xca\xbb\x2a\x32\x11\x28\x79\x71\xb8\xb9\xd2\x06\x42\xc1\xc1\x35\x58\x28\xa8\xaf\xf6\xea\xe2\xb7\xf5\x9c\x8d\x48\xcb\x88\xa4\x54\x76\x89\x3d\x89\xae\xba\x38\xd1\xe6\x1e\xb7\x11\x85\x92\x5a\xd2\xde\x35\xe8\x0f\x8a\xee\xda\xed\x92\x0f\x6d\xef\x71\xfa\xa9\xab\x1c\x7b\x0f\x00\xcb\x73\x72\x40\x95\xe9\xe2\xc9\xa0\x9b\x73\x2c\xf8\x44\x28\x51\x64\x53\x72\x04\xb9\xf4\xf7\x1a\x9a\x5e\x1e\x9e\x6d\x0e\x72\xf8\x49\xfd\xae\x2e\xcf\xcf\xe6\xef\x76\xa4\x69\xb9\xfc\x97\x73\x51\x75\x43\x8e\x31\x95\xcc\x1c\x7c\x49\x63\x43\x53\x01\x1b\x26\x54\xe8\x16\xcc\xac\xd3\x0b\x48\x33\x66\xa0\x4f\xeb\xd7\x38\xf1\x65\x1f\xb1\xd2\x6a\x43\xd6\x65\x05\xe6\x5a\xcb\x56\x37\x1c\xfc\xad\xde\x6c\xb4\xfa\x5f\x11\x07\x93\xe2\x07\x12\xb2\x3b\x7e\x34\x98\x33\x83\x37\x9a\xbb\x59\x6d\xe6\xa6\xf2\xda\xf7\x12\x0b\x0b\x7d\x53\x2f\x86\x10\x77\xc5\xeb\xf0\x27\x61\x33\x3a\x8d\xe2\xaa\x4c\x40\xff\xee\x64\x69\x8d\xab\x9d\x63\x7a\x36\x92\x18\x12\xaa\xb7\xdb\xd1\x27\x43\xac\xb6\x1e\x83\x5e\xe9\xb5\x76\x4e\x7e\x9f\xfb\x15\x89\x88\x3b\x53\xc8\xa8\x3a\x4d\xc8\x8e\xc2\x26\x83\x06\xad\x65\xc8\xa3\xe6\xb5\xfc\xe3\x30\x8f\xe3\x2d\x38\xf7\x8e\x5a\x68\xe4\x6b\xe1\xf5\x44\x7e\x41\x9c\x0d\x97\x58\x41\xf8\xd7\x3b\x7e\xaf\xb1\xc5\x8a\x09\x89\x1c\xac\x86\xd4\xa0\x13\xfd\x9e\xe4\x9d\x72\x24\x9a\xec\x32\xd5\x3a\x87\xbe\xcd\x90\xaa\x5a\xb5\xc0\x9f\xa5\xa5\x31\xe4\xe8\x7a\xdb\x7a\xf4\x5b\x46\x34\x10\xfe\x6a\xba\xf3\x73\x88\x0f\x40\xa6\x54\xd4\x01\x8c\x68\x54\x70\xc5\x4a\xe9\x51\xdc\x21\xbc\x20\x0d\xb8\x9b\x25\x74\xdd\x74\xbf\x34\x62\xf4\xf9\x50\x76\x52\xda\xd2\x60\xd2\x1e\xd7\x9f\x01\x00\x00\xff\xff\x24\x6b\xcc\x1d\x12\x06\x00\x00")

func templatesObjc_nsurlconnection_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesObjc_nsurlconnection_fullTpl,
		"templates/objc_nsurlconnection_full.tpl",
	)
}

func templatesObjc_nsurlconnection_fullTpl() (*asset, error) {
	bytes, err := templatesObjc_nsurlconnection_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/objc_nsurlconnection_full.tpl", size: 1554, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesObjc_nsurlsession_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\x6b\x6f\x1a\x3b\x10\xfd\xce\xaf\x18\xe5\x26\xd1\x82\x50\x3e\x5f\x2d\x97\x2b\x9a\x07\x4a\x15\xf2\x10\x10\x55\x15\x22\xc8\x59\x0f\xe0\xc6\xd8\x5b\x3f\xda\x52\xb4\xff\xbd\x63\xef\x6e\xb4\x50\xda\x95\x60\xed\x19\xcf\x99\x33\x9e\x33\xbb\xdb\x81\x61\x6a\x85\x70\xfa\x86\xdb\x2e\x9c\x2e\x20\xed\xc3\xc5\xbd\xe6\x5e\xa2\x85\xa2\xf8\x47\x6c\x72\x6d\x1c\xfc\x47\x07\xc3\x11\x32\xfd\xdf\xda\xed\x50\xf1\xa2\x68\x5d\x3e\x3e\x8e\xc0\xae\xb5\x97\xfc\x0e\x31\x1f\x7b\xa5\x84\x5a\x41\x1f\x3e\xdf\x4c\x7a\x74\x0a\x2e\x3e\x70\x2e\x9c\xd0\x8a\xc9\x6b\xcc\x24\x33\x2c\x6c\x08\xa3\x25\x94\x83\x0d\x13\x2a\x09\x0b\x66\x56\x59\x17\xb2\x35\x33\xd0\xa1\xf5\xb7\xd9\xbc\x0d\xbb\x16\xd0\x33\x60\xde\x69\x83\x12\x99\xc5\x5c\x6b\x59\x99\xc3\x13\xe0\xaf\xf4\x66\xa3\xd5\x47\x45\x39\x98\x14\x3f\x91\x90\x83\xf9\xc9\x60\xce\x0c\x5e\x6a\x1e\xf8\x3e\x4c\xee\xbd\x63\xaf\x12\x9f\xc7\xa3\x31\x7e\xf5\x68\x1d\x74\x4c\xb5\xe8\xc3\xec\x98\xbf\x72\x7f\x12\x6e\x4d\xd6\x94\xce\xd0\x0b\xe8\x17\x2c\x13\x67\xa8\xcc\x34\x64\x7a\x36\x92\x32\xcc\xe7\x65\xb5\x74\x6d\x62\xb9\xad\x31\xa8\xca\x9a\x6b\x0c\x9f\xa0\xb5\xa1\xfa\x8e\xad\x16\x31\x77\xc3\x61\xe9\x02\x90\x57\x3b\x82\x3c\x16\x7d\xcd\x1c\x9b\x32\xfb\xd6\x01\x47\xff\x01\xa2\x46\xe3\x95\x27\x30\xac\x28\xa4\x75\x95\x99\xde\xe4\x12\xc3\xdd\xdf\x32\xc5\x25\x9a\xf4\x25\x79\x98\x04\x2c\xe8\x84\xb8\x6e\x99\x63\x8c\x36\xd7\xca\x62\xb8\x9e\x72\x15\x1c\x37\xc6\x68\x6a\x0c\x86\x57\xbb\xd1\x80\x92\xda\xed\x74\xfa\xb4\x17\xba\x76\x2e\x7f\xdf\xf5\x21\x39\x72\xa4\x5d\xc3\xf7\x0e\xc0\x46\x7a\x95\x0c\x4e\x26\x8e\x39\x6f\x53\x38\x93\xfc\xa4\x0b\x4d\xbc\x0b\x1b\x5d\x57\x9a\x63\xfb\x30\xf6\x5a\x64\x51\x69\x66\x4b\x1c\x90\x71\x34\x96\xd2\xef\x45\x33\x29\x6f\xa3\x67\x28\x50\x72\xbb\x8f\xb0\xa4\x22\x13\xc1\x21\x88\x5c\x28\xa8\x20\x0e\x0b\x6e\xf2\x3c\x1b\x10\xc7\x01\x51\x8c\xa3\x33\xab\x93\xea\xd7\x2f\x98\xb9\xa1\x36\x77\xb8\x4d\xc9\x35\x3f\xa0\x5a\xec\xed\xc4\x32\x89\x37\x0b\xfd\x3e\x28\x21\x8f\xe7\x2b\x15\x07\xd4\x74\xfc\x11\x35\x3b\x7b\xb7\x51\x4d\x3a\x9b\x13\x63\x11\xd5\x1a\x7a\x9a\x46\x2d\x00\xaa\x8c\xf4\x48\x42\x0d\xcd\x9d\x0e\xff\x2d\x03\x6e\x2a\xeb\xbc\xf7\xc7\xba\xa2\x2e\xfa\x65\x69\x21\xe1\x5f\xf9\x73\x61\x73\xe6\xb2\xf5\xc2\x6e\x55\x96\xbc\xef\x56\xe8\x16\x61\xbe\x17\x24\x40\x8f\x49\xbb\x0b\x2f\x49\x7b\x77\xf4\x63\xf1\xf0\xd8\x83\xa2\x91\xa3\x68\x50\x9b\x45\x95\x93\x5c\xfc\x06\xc9\xdc\x18\x09\x8a\x1f\x69\x9d\x43\xc7\xad\x91\x46\x33\xce\x52\x6d\xcb\xbc\x31\xa8\x5c\xb5\x6d\xc0\x7d\x5f\x0b\x89\x90\xfc\xce\xe2\xfc\x9c\x52\x45\x20\xe3\x15\x8d\x31\xa6\x24\x28\x5c\x32\x2f\x6b\x94\x60\x84\x57\x24\x95\x20\xdd\x0f\x86\x4f\x42\x78\x87\xfa\x1d\x53\x6e\xe8\x9d\x37\x38\xaf\x7b\x5d\xb4\x8a\xd6\xaf\x00\x00\x00\xff\xff\xa5\xf2\x94\xdd\x5b\x05\x00\x00")

func templatesObjc_nsurlsession_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesObjc_nsurlsession_fullTpl,
		"templates/objc_nsurlsession_full.tpl",
	)
}

func templatesObjc_nsurlsession_fullTpl() (*asset, error) {
	bytes, err := templatesObjc_nsurlsession_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/objc_nsurlsession_full.tpl", size: 1371, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPhp_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8e\x4f\x4b\xc5\x40\x0c\xc4\xef\xfd\x14\x61\x79\x87\x2d\x14\xbf\x80\x56\xf1\xcf\xc1\x8b\xe0\xc5\x93\x3c\x96\xb0\x9b\xda\x42\xdb\x5d\xd2\x28\x95\xc7\xfb\xee\x26\xad\x0a\x1e\x3c\xfe\x66\x26\x93\xb9\xba\x29\x7d\x39\x9d\xe0\xe2\x36\xa5\x41\x86\x3c\xe3\xf8\x40\x71\x44\x46\x03\x38\x9f\xcd\x7b\x66\x2a\xc8\x74\x97\xd3\xe7\x5f\xe5\x91\x30\x11\xab\x56\x1d\xa2\xac\xd0\xc2\x22\x4c\x38\x85\x98\x67\xa1\x55\x42\x54\x12\xf2\xaf\x15\x80\xeb\x45\x8a\x83\xf6\x1a\x8c\x94\x27\x92\x3e\xa7\x4d\x71\x56\xf9\xb4\xb1\x76\x6d\xf4\xdb\x6c\x70\x6f\x75\xb3\xd8\x1f\x80\x63\x75\xac\x2f\xab\x43\x57\xf4\x5d\x97\x0b\xcd\xde\x22\x2f\x3c\xaa\xdd\x80\x63\xd7\x40\x87\xe3\x42\x0d\xd8\x26\x8d\x0e\x1d\xf8\x2d\xde\xb6\xbb\x53\x6b\x0b\xad\x83\x78\x35\x3f\x90\x43\x7a\x9f\x8a\xff\x5e\xfe\x46\x12\x74\x19\x86\x84\x82\x76\x56\xff\x13\x8a\xfb\xa6\xe5\x27\xf3\x15\x00\x00\xff\xff\xb4\x0c\x94\x89\x49\x01\x00\x00")

func templatesPhp_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPhp_fullTpl,
		"templates/php_full.tpl",
	)
}

func templatesPhp_fullTpl() (*asset, error) {
	bytes, err := templatesPhp_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/php_full.tpl", size: 329, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPython_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x85\x85\x7a\x00\x09\xf1\x00\x95\x38\x6c\xdd\xa1\x97\x4a\x7b\x83\xc8\x23\x6e\x89\x46\x13\x96\xb8\xd2\x26\x94\x77\x9f\x4d\xba\x4e\x2a\x17\xe2\x9f\xcf\xff\xef\x98\x75\x85\x88\xfe\x42\xb0\xfb\xa4\x9f\x0e\x76\x06\xf6\x03\xf4\xa7\x60\x6f\x33\x25\xc8\xd9\x5d\x97\x10\x19\x04\x53\x40\x84\x6a\x5d\xc9\xdb\x9c\x45\xe9\x5f\xac\x75\xec\x82\xc7\xf9\x8d\xc6\x19\x23\x6a\xa1\x8c\xa5\x33\x5c\xd1\xf9\xa6\xdd\x57\x20\xcf\x18\xbc\x87\x01\x26\xe6\xa5\x1f\x67\x47\x9e\x7b\xed\x3f\x88\x4c\xa3\x36\x1d\x66\x4c\x1a\xd7\xd4\xaa\x1f\x43\x62\x29\xea\x76\x6b\x56\xe5\x3d\x86\x6f\x4d\x2f\x67\x5a\x30\xd2\x6b\xb0\x4f\xca\x91\xd0\x52\xd4\xfc\xbf\xcc\x3e\xd2\xd7\x8d\x12\x17\xdb\x13\xf1\x14\xac\x1a\x77\xc5\x14\x79\xda\x1c\xdc\x59\x32\x31\xa9\x63\xce\x1d\x7c\xc8\x7b\x50\xe0\x11\x71\xbf\xf1\x9d\x2b\x39\x4a\x4e\xdb\x29\x6d\xf0\x23\xfd\x8e\x97\xe1\xa3\x6c\x71\x28\xb3\x5c\x88\xa5\x5a\x82\x4f\xd4\x94\x8f\x4b\x74\x9e\x1b\x11\xfb\xc4\xc8\xb7\xd4\x29\x2e\x33\x63\x0a\xfe\x99\x10\xd5\x36\x6d\xfb\x7f\xb5\x71\x0e\x9b\x51\x25\x53\x19\xe3\xf1\x4a\xc6\xc0\x30\x40\x6d\x8c\xae\xde\x98\xba\xec\xbe\xfc\x87\xea\x37\x00\x00\xff\xff\x90\xad\x14\x9c\xe9\x01\x00\x00")

func templatesPython_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPython_fullTpl,
		"templates/python_full.tpl",
	)
}

func templatesPython_fullTpl() (*asset, error) {
	bytes, err := templatesPython_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python_full.tpl", size: 489, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVim_script_fullTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\xc1\x8e\xc2\x20\x14\x45\xf7\xfd\x0a\x26\xdd\xcc\x6c\xfa\x01\x93\xcc\x62\xd4\x18\x37\x26\x6e\xfc\x80\x67\xb9\x0a\x09\x42\x03\xaf\x31\x4a\xf8\x77\x41\xaa\xd6\xe5\x3b\xf7\xe6\xc0\x8d\x51\x74\xff\x52\x6a\xd6\xce\x92\x59\xa1\x37\xe4\xa9\x1c\x22\xa5\x92\xed\x3c\x06\xf2\x58\x38\x79\xfd\x24\x1b\x90\x84\xcf\xcc\x80\x45\xf8\xf5\x08\xe2\x4f\x5c\x70\xa0\x41\xb7\x8a\x79\x68\x4b\x77\x0b\x56\x4e\xe6\xd2\x77\xb9\xf6\xde\x4c\x8e\xa2\x5b\x3a\xcb\xb0\x3c\x91\x97\xee\xa7\x41\xaf\x5c\x35\x76\x81\x89\xc7\x30\x27\x67\x84\x40\x27\xcc\x51\x5f\x45\xcd\x68\xf3\x57\xbe\x2a\x8c\x51\x1f\xb3\x94\x42\xf5\xa6\xf4\x4e\xd5\x83\xe4\x06\xac\xac\x6f\xaf\x75\x9e\xae\x6f\xcf\x91\xf7\x00\x00\x00\xff\xff\x5e\x8d\x44\xdb\x13\x01\x00\x00")

func templatesVim_script_fullTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesVim_script_fullTpl,
		"templates/vim_script_full.tpl",
	)
}

func templatesVim_script_fullTpl() (*asset, error) {
	bytes, err := templatesVim_script_fullTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vim_script_full.tpl", size: 275, mode: os.FileMode(420), modTime: time.Unix(1426557658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesXhr_external_fileTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\xcc\xea\x62\x19\xeb\x48\x09\xb0\x87\x45\x2c\xeb\xb0\x9b\x14\x39\x24\x48\x90\xb8\x40\x8a\xa2\x07\x5a\x1c\x49\x44\x65\x92\x25\x47\xfe\x40\xe0\xff\xde\xa1\x25\xdb\x6a\x1b\x20\xbc\x58\x9c\x79\x6f\xf0\xde\x0c\xc7\xd9\x5f\x37\x8f\xff\x2f\xbe\x3c\xdd\x42\x4d\xab\x26\x1f\x65\xc7\x1f\x14\x32\x1f\x01\x9f\x6c\x85\x24\xa0\xa8\x85\xf3\x48\xf3\xa8\xa5\xf2\xe2\xdf\xa8\x4f\x91\xa2\x06\xf3\xd7\xbb\x67\x58\xa0\xa7\x2c\xed\xee\x5d\xce\xd3\xee\xf8\x2d\xd5\x3a\x91\xce\x58\x12\xae\x42\x82\xb7\x43\x30\x9c\xa5\x71\x12\x1d\x5c\x83\x37\x8d\x92\x70\x65\xb7\xb0\x6c\x44\xf1\x7d\x76\x42\x58\x21\xa5\xd2\x15\x43\xae\x2e\xed\xf6\x1c\x5f\x32\xaa\x72\xa6\xd5\xf2\xa2\x30\x8d\x09\x35\x2c\x8a\xa2\xb6\x6d\x59\x76\xa8\x7d\x27\x23\xed\x75\x64\x69\x67\x29\x5b\x1a\xb9\xe3\x1f\xd6\x04\x4a\xce\xa3\xa0\x2b\x82\xa2\x11\xde\x77\x97\x4e\x64\x94\x87\x6f\x28\x55\x83\x50\xa3\xc3\x2c\x65\x02\xd3\x7c\xe1\x94\xa5\x7c\x34\x2a\x5b\x5d\x90\x32\x1a\x1c\xfe\x68\xd9\x7c\x1c\xa0\x93\xde\xdb\x5a\x38\xd8\xd6\x0e\xe6\xa0\x71\x03\xaf\x0f\xf7\x77\x44\xf6\xb9\x07\x4e\x66\x6f\x6f\x90\x3c\x39\xb4\xc2\xe1\x7f\xac\x06\xf6\x9d\x56\x66\x24\xc6\xa2\x8e\xa3\x00\x78\x40\xaa\x8d\xe4\x5c\x34\x85\x70\xff\xec\x1a\xbe\x4c\x81\x5c\x8b\x93\xce\xe2\xa0\xce\xa3\x0d\x62\xfc\x2f\xa5\xb4\x63\xc7\x3b\x4f\x82\x90\xc7\xa7\x2b\x64\x3d\x47\xd9\xf1\x49\x6b\x38\xaa\x84\x98\x6a\xe5\x93\x03\xe3\x25\x30\x60\x3e\x87\x7f\x86\x98\xc3\x20\x4d\xd1\xae\x50\x53\xb2\x71\x8a\x30\x8e\x32\x9b\x87\x76\x5e\x47\xf0\x37\xf4\x7c\x6f\x59\x06\x2e\x70\x4b\x1c\x8b\xb2\xd4\xe6\xd1\x64\xf6\x51\x91\xa0\xb1\xf5\xe7\x32\xdd\xfd\xbd\x02\x9d\xbd\xfd\xec\xe4\xd2\xa3\x96\x71\x68\x44\xdf\x49\xc6\xee\x07\xd3\x61\xdf\xb2\xc1\x1b\x27\xaa\xc7\x35\xba\xb3\x6b\x4c\xac\xc3\x35\xab\xb8\xc1\x52\xb4\x4d\x98\xca\xbb\x3c\x63\x87\x1c\x4f\xc6\x3e\x71\x4c\x54\xe2\xd0\xc4\x5e\xd8\x7b\xc5\x8e\xcf\xe0\xf0\x82\xe6\x0c\x91\x82\xc4\xc2\x09\xed\x4b\x74\x49\x88\xfa\xaf\x97\xdf\x3a\xdc\xc1\xb3\xd2\x1a\xdd\xdd\xe2\xe1\x3e\x4c\x89\xd3\x89\x16\x2b\xfc\x63\xce\x9f\x42\x39\x1e\x32\x6b\xdd\x28\x2d\xcd\x86\xc7\xdc\x18\x21\x07\xa3\x85\x78\xf8\x0c\x49\x54\x9c\x3b\xf5\x9c\x9f\xa0\xdb\xbd\x60\x83\x05\x19\x17\x8f\x07\x6b\x39\xee\x45\x33\x21\xe1\xa5\xbb\x0d\x7e\xee\x95\x27\x64\x59\xf1\x58\x72\x07\x0d\x77\x70\x3c\xfd\xad\xa5\x53\x28\x45\xe3\xf1\x03\xb2\xb1\x03\xa2\xb1\x67\xd2\x9e\x17\xf3\xb8\x53\x59\xda\xef\x66\xda\xfd\x09\xfd\x0c\x00\x00\xff\xff\x56\xe0\xb4\x5d\x9c\x04\x00\x00")

func templatesXhr_external_fileTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesXhr_external_fileTpl,
		"templates/xhr_external_file.tpl",
	)
}

func templatesXhr_external_fileTpl() (*asset, error) {
	bytes, err := templatesXhr_external_fileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/xhr_external_file.tpl", size: 1180, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesXhr_external_filesTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xeb\x36\x10\xbc\xfb\x57\xec\x13\x1e\x60\x19\xf1\x93\xf3\x80\x1e\x0a\x5b\xd2\xa1\x4d\x8a\x1c\x92\x26\x48\x5c\x20\x45\x60\x14\xb4\xb8\x92\x88\xc8\x24\x4b\x52\xfe\x80\xa1\xff\xde\xa5\x24\xc7\x4a\x10\x20\xd5\xc5\xa6\x38\x3b\x9c\x99\x5d\x31\xfe\x76\x75\xff\xfb\xf2\xef\x87\x6b\x28\xdd\xa6\x4a\x47\xf1\xe9\x07\x19\x4f\x47\x40\x4f\xbc\x41\xc7\x20\x2b\x99\xb1\xe8\x92\xa0\x76\xf9\x8f\x5f\x83\x7e\xcb\x09\x57\x61\xfa\x7c\xf3\x08\x4b\xb4\x2e\x9e\x75\xeb\x6e\xcf\xba\xc3\xe9\x3f\x17\xdb\x88\x1b\xa5\x1d\x33\x05\x3a\x38\xb6\x2f\xfd\xb3\x56\x86\xa3\x81\x39\x58\x55\x09\x0e\x3f\xf5\x1e\xd6\x15\xcb\x5e\x17\x6f\x08\xcd\x38\x17\xb2\x20\xc8\xcf\x4b\xbd\x3f\xbf\x5f\x13\xaa\x30\xaa\x96\xfc\x47\xa6\x2a\xe5\x39\x34\xb2\xac\xd4\x75\x9e\x77\xa8\xa6\x93\x31\xeb\x75\xc4\xb3\xce\x52\xbc\x56\xfc\x90\x1e\x8f\x60\x98\x2c\x10\xbe\xff\x33\x85\xef\x92\x6d\x10\xe6\x09\x44\x7f\x88\x0a\xff\xa4\x85\x85\xa6\x19\xc5\x24\x1b\x04\x4f\x02\x2f\x3d\x80\xac\x62\xd6\x76\x8b\xce\x47\xd0\x6e\x12\x53\x57\xdf\x34\x41\x3a\x58\xcc\xc1\x23\x21\x27\x46\x28\xd1\x60\x3c\x23\x3a\x02\xa0\xe4\x9e\xdb\x66\x46\x68\x97\x8e\x46\x5b\x66\x5a\x90\x85\x04\x8e\xcd\x62\x34\xca\x6b\x99\x39\xa1\x24\x18\xfc\xb7\xa6\x54\xc3\x49\x1f\x98\x47\x0a\x7e\x2b\xac\x23\xe8\xcb\xff\x70\xf0\x4e\xdb\x14\xfa\xb3\x57\x5d\x3c\x39\x65\x16\xb6\x94\xc4\x76\xb9\xa0\x9f\xb8\x67\x8f\x2a\x94\x85\x2b\xe9\xd5\xc5\xc5\x64\xd0\x2c\x91\x43\xf8\xad\x95\xfa\xd2\x01\x5f\xc4\x6a\x35\x04\xf8\xc7\xa0\xab\x8d\x3c\xf7\xa9\x19\xf4\xc2\x9f\xb6\x2f\x0d\x9d\x27\x71\x07\xcf\x77\xb7\x37\xce\xe9\xc7\x93\xcb\x05\xa9\x8d\x1e\x0c\x6a\x66\xf0\x37\xea\x91\x6f\x81\xaf\xa2\x8a\x48\x69\x94\xa1\xb7\x13\xdd\xa1\x2b\x15\x3f\x19\x82\xe8\x2f\x53\xd1\x62\x0a\xce\xd4\x38\xe9\x8e\x1d\xf0\xdc\x6b\x9f\xa4\x7d\x47\x25\x0d\xcd\xc1\xc1\x3a\xe6\x90\x86\xda\x27\x98\xc0\x29\xf3\x10\x3f\x1a\x76\xa5\xb0\x51\x5b\xf1\xe4\x2b\x20\x49\xe0\x97\x8f\x9e\xb9\xca\xea\x0d\x4a\x17\xed\x8c\x70\x18\x06\xb1\x4e\xfd\x90\xcd\x03\xb8\x80\xbe\xde\x6a\x92\x81\x4b\xdc\x3b\x7a\x17\xc4\x33\x9d\x06\x93\xc5\x57\x24\x5e\x63\x6d\xcf\x34\xdd\xfa\x33\x82\x3e\xe5\xc5\x9b\x4b\x4b\xad\x0e\x7d\x10\x7d\x92\x84\x6d\x06\xa3\x45\xbe\x79\x85\x57\x86\x15\xf7\x5b\x34\x67\xd7\x18\x69\x83\x5b\x52\x71\x85\x39\xab\x2b\xdf\x95\x4f\xeb\x94\xf6\x56\x42\xc7\x8a\x29\x0c\x8a\xad\x53\xfa\x81\x36\x59\xc1\xda\x34\x7b\x85\x9f\xb1\x9e\xe6\xa1\xfd\x3e\x12\x82\x70\xe6\xd8\x92\x26\xda\xe6\x68\xa2\x6e\xca\x2e\xfb\x51\x6d\xcd\x0b\x29\xd1\xdc\x2c\xef\x6e\x7d\xbb\x68\x3b\xf2\x83\xdd\x8f\x72\x8b\x7e\xc5\xc3\xaa\xdf\x6b\x45\xef\x84\xe4\x6a\x47\xfd\xae\x14\xe3\x83\x1e\xc3\xbb\x0f\x8a\x2c\xd0\xde\x5b\xf8\x34\x8b\xe6\xf0\x84\x15\x66\x4e\x99\x70\x3c\xb8\xb5\xc6\xbd\x68\x2a\x88\xe8\x4e\xba\xf6\x7e\xfc\x47\x80\x24\x2b\x1c\x73\x8a\x52\x51\x94\xe3\xe9\x87\x6c\xa7\x90\xb3\xca\xe2\x17\xc5\x4a\x0f\x0a\x95\x3e\x17\xd1\x4d\x31\x3b\x5d\x15\xf1\xac\xbd\xba\xfc\x4d\xd6\xde\xd1\xff\x05\x00\x00\xff\xff\x6a\xf1\x88\x57\xbb\x05\x00\x00")

func templatesXhr_external_filesTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesXhr_external_filesTpl,
		"templates/xhr_external_files.tpl",
	)
}

func templatesXhr_external_filesTpl() (*asset, error) {
	bytes, err := templatesXhr_external_filesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/xhr_external_files.tpl", size: 1467, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesXhr_simpleTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x4d\x6f\xa3\x40\x0c\xbd\xf3\x2b\xbc\x73\x22\xda\x2c\x5c\xf6\xb0\x5a\x06\x0e\xfd\x90\x72\x68\x94\x28\x4d\xa5\xf4\x48\xc1\x29\x48\x64\x98\xce\x98\x92\x28\xe2\xbf\xd7\xc3\x47\x9a\x4a\x55\x7d\x19\x19\xbf\xf7\xf4\xec\x87\xfc\x75\xb7\xba\xdd\x3e\xaf\xef\xa1\xa0\x43\x95\x78\x72\x7a\x30\xcd\x13\x0f\xb8\xe4\x01\x29\x85\xac\x48\x8d\x45\x8a\x45\x43\xfb\x3f\xff\xc4\x38\xa2\x92\x2a\x4c\x76\x8b\x0d\x6c\xd1\x92\x0c\x87\xde\x93\xe1\x40\x97\x2f\x75\x7e\xe2\xc7\x66\xa6\xd4\x94\x78\xfb\x46\x65\x54\xd6\x0a\x0c\xbe\x35\x4c\xf0\x67\x70\xee\x85\xde\x53\x03\xc7\xc2\x40\x0c\x0a\x5b\xd8\x2d\x1f\x16\x44\x7a\x33\x81\xa2\xf3\x19\x82\xb5\x41\x9d\x1a\xbc\x61\x45\xe8\xba\x9e\xc5\x8c\xa0\xd6\xa8\x7c\xe1\x00\x4b\xa4\xa2\xce\x79\x26\xe6\xe0\xfa\x27\x53\x71\x33\x07\x32\x0d\xce\xa2\x9e\x70\xa5\xb3\xd2\xce\x88\xfd\x22\xa5\x0c\xbb\x3e\x59\x4a\x09\x79\x5d\xf5\x8a\xec\x67\xb2\xec\xe3\xe4\xd5\x55\xb9\x07\x9f\x8a\xd2\x06\x3d\xe3\xd1\x31\x20\x8e\xe1\xef\x35\xc6\x55\x5e\x67\xcd\x01\x15\x05\xad\x29\x09\x7d\x21\x75\xe2\x4e\xf2\x5f\xc0\x6f\x18\xf9\x56\xb3\x0d\xdc\xe2\x91\xf8\x9b\x90\xa1\x4e\xc4\xe8\xf6\x07\x11\xe7\xb1\xb1\x9f\x32\x43\xff\x9d\xc0\xb0\x5e\x17\x5d\xb6\xb4\xa8\x72\xdf\x1d\x62\xbc\x24\x63\x3b\xaf\x2d\x55\x5e\xb7\x7c\x81\xaa\x4e\xf3\xab\xad\xe1\x92\xd0\x25\x31\x86\x47\x1c\xf0\x14\xa9\x0c\xc7\x8c\xc3\xe1\xc7\xf9\x08\x00\x00\xff\xff\xcc\xcd\x1a\x56\x50\x02\x00\x00")

func templatesXhr_simpleTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesXhr_simpleTpl,
		"templates/xhr_simple.tpl",
	)
}

func templatesXhr_simpleTpl() (*asset, error) {
	bytes, err := templatesXhr_simpleTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/xhr_simple.tpl", size: 592, mode: os.FileMode(420), modTime: time.Unix(1426433181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go_full.tpl":                   templatesGo_fullTpl,
	"templates/go_get_with_data_url.tpl":      templatesGo_get_with_data_urlTpl,
	"templates/go_post_form.tpl":              templatesGo_post_formTpl,
	"templates/go_post_single_file.tpl":       templatesGo_post_single_fileTpl,
	"templates/go_post_text.tpl":              templatesGo_post_textTpl,
	"templates/go_post_with_data_url.tpl":     templatesGo_post_with_data_urlTpl,
	"templates/go_simple_get.tpl":             templatesGo_simple_getTpl,
	"templates/go_simple_method.tpl":          templatesGo_simple_methodTpl,
	"templates/go_simple_post.tpl":            templatesGo_simple_postTpl,
	"templates/java_full.tpl":                 templatesJava_fullTpl,
	"templates/nodejs_external_file.tpl":      templatesNodejs_external_fileTpl,
	"templates/nodejs_external_files.tpl":     templatesNodejs_external_filesTpl,
	"templates/nodejs_full.tpl":               templatesNodejs_fullTpl,
	"templates/nodejs_simple_get.tpl":         templatesNodejs_simple_getTpl,
	"templates/objc_nsurlconnection_full.tpl": templatesObjc_nsurlconnection_fullTpl,
	"templates/objc_nsurlsession_full.tpl":    templatesObjc_nsurlsession_fullTpl,
	"templates/php_full.tpl":                  templatesPhp_fullTpl,
	"templates/python_full.tpl":               templatesPython_fullTpl,
	"templates/vim_script_full.tpl":           templatesVim_script_fullTpl,
	"templates/xhr_external_file.tpl":         templatesXhr_external_fileTpl,
	"templates/xhr_external_files.tpl":        templatesXhr_external_filesTpl,
	"templates/xhr_simple.tpl":                templatesXhr_simpleTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go_full.tpl":                   &bintree{templatesGo_fullTpl, map[string]*bintree{}},
		"go_get_with_data_url.tpl":      &bintree{templatesGo_get_with_data_urlTpl, map[string]*bintree{}},
		"go_post_form.tpl":              &bintree{templatesGo_post_formTpl, map[string]*bintree{}},
		"go_post_single_file.tpl":       &bintree{templatesGo_post_single_fileTpl, map[string]*bintree{}},
		"go_post_text.tpl":              &bintree{templatesGo_post_textTpl, map[string]*bintree{}},
		"go_post_with_data_url.tpl":     &bintree{templatesGo_post_with_data_urlTpl, map[string]*bintree{}},
		"go_simple_get.tpl":             &bintree{templatesGo_simple_getTpl, map[string]*bintree{}},
		"go_simple_method.tpl":          &bintree{templatesGo_simple_methodTpl, map[string]*bintree{}},
		"go_simple_post.tpl":            &bintree{templatesGo_simple_postTpl, map[string]*bintree{}},
		"java_full.tpl":                 &bintree{templatesJava_fullTpl, map[string]*bintree{}},
		"nodejs_external_file.tpl":      &bintree{templatesNodejs_external_fileTpl, map[string]*bintree{}},
		"nodejs_external_files.tpl":     &bintree{templatesNodejs_external_filesTpl, map[string]*bintree{}},
		"nodejs_full.tpl":               &bintree{templatesNodejs_fullTpl, map[string]*bintree{}},
		"nodejs_simple_get.tpl":         &bintree{templatesNodejs_simple_getTpl, map[string]*bintree{}},
		"objc_nsurlconnection_full.tpl": &bintree{templatesObjc_nsurlconnection_fullTpl, map[string]*bintree{}},
		"objc_nsurlsession_full.tpl":    &bintree{templatesObjc_nsurlsession_fullTpl, map[string]*bintree{}},
		"php_full.tpl":                  &bintree{templatesPhp_fullTpl, map[string]*bintree{}},
		"python_full.tpl":               &bintree{templatesPython_fullTpl, map[string]*bintree{}},
		"vim_script_full.tpl":           &bintree{templatesVim_script_fullTpl, map[string]*bintree{}},
		"xhr_external_file.tpl":         &bintree{templatesXhr_external_fileTpl, map[string]*bintree{}},
		"xhr_external_files.tpl":        &bintree{templatesXhr_external_filesTpl, map[string]*bintree{}},
		"xhr_simple.tpl":                &bintree{templatesXhr_simpleTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
